import { NextRequest, NextResponse } from "next/server";
import OpenAI from "openai";

// Configure the OpenAI API client
const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
});

export async function POST(req: NextRequest) {
  try {
    const { imageBase64 } = await req.json();

    if (!imageBase64) {
      return NextResponse.json(
        { error: "Image base64 is required" },
        { status: 400 }
      );
    }

    const prompt = `Please Analyze the image in base64 format and 
    describe the main item  for a product listing in a declarative tone, avoid using "the image". 
    Focus on material composition, shape, color, condition, and size.
    End with the product type (e.g., utensils, clothing), color (e.g., silver, blue), and quantity (e.g., two forks). Please limit the description to 40 words `;



    const completion = await openai.chat.completions.create({
      model: "gpt-4-turbo",
      messages: [
        { role: "system", content: "You are a helpful assistant." },
        {
          role: "user",
          content: [
            { type: "text", text: `${prompt}` },
            {
              type: "image_url",
              image_url: {
                url: imageBase64,
              },
            },
          ],
        },
      ],
      max_tokens: 60,
    });

    const description = completion.choices[0]?.message?.content?.trim();
    console.log("Generated Description:", description);

    if (!description) {
      return NextResponse.json(
        { error: "No description generated by GPT" },
        { status: 500 }
      );
    }

    return NextResponse.json({ description });
  } catch (error) {
    console.error("Error generating description with GPT:", error);
    return NextResponse.json(
      { error: "Error generating description" },
      { status: 500 }
    );
  }
}
